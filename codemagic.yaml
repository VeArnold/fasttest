workflows:
  ios-project:
    name: ios_project with development certificate, manual code signing
    environment:
      vars:
        CM_CERTIFICATE: Encrypted(Z0FBQUFBQmZrVXdhM2pfYjRvUjZudHlKam5ld3pZVk9HaWVpNW1mdlR5UW9aNUVqTGVOdXpYb2pHZ2JwQ1o4NUVHZ3BWRmtTdERuUzRROUJlZ1F2RXVVQ3hJblhDZGg0cWZkQm9mYVZjSFRwNGxEc0lSZVNCR2J3cHp6YlQ5SjkxWkxrblh6cm0tOVVKTkg1ZDRkaXkzcG1ZWU4zRFhZbEhJV196LUZRTnJtdDJDbjZjbHFkemEyZlpRUnA4LU1aVExJUzJER0M2eHhSX2tXY2g3NG8tdGxIRHVkbm1zaUd2WVBjdmRzV3JQRVRPUHY2SW5BNFBKMV9DRVZFS0ppelYwYUNtN1NkeC1vUjhtZlE2Y3NnOXVOTXcxUm5GMzktRnZkNXdnbFlpS0lGLS0yYVlwa2h0MUdxaDRlNFN0YTdELURXSkE3aUo1a25tMk45RzgyTEZaTHFXX0tQMEVmNDVON0Z2dWVObzlHSmJtYVRsWXV2MzVUOU54R0E3OXdwcm04azBheXp1MWRRYzlEbU82UHdDT2J0TDFmOGotS3lUZ2pLWDFhd3pfWkowNDBkRFU5M0FXbjBOOVd3NUFPc0NjdmZoajJWYmlFT2R0Yl9LN3U3X3ZkSDZfekRuYVQtVG1lZ0E1VlpsS2dEcmJDSWlaaFJsTDVST0w5R1VoVE9Ka09tamJJTzRpSU4tSDc5SUx6ZkJUbXI5aENLMVJzNkFpcncwbWU1NHRWOHBBTDhydFJCVFhaMDFtM0hRZ29YbEFheHRDaGpVTlhSdXFXdGNMNWg4UTVGS0FFRkg4NGtCdzdrbjFtSEpWb1RrWlNzUmxFZkpuYzJ6cEYyQ1RVQTlBTks1dGVLejVMcUVNNUtBUjd3V0ZVNk0tRk85c0pkZVN6MkZYamx6eElremhoXzg5MDVqVTRGSG9Ja2kwRDBsRjFmR2dZSDVObDVTRHNieWVmQXhqUks2RF9YS0NxQmg2NGpUZVNKc1MxZEo2VU5KWXIyLUR6U09FanBWYVhEeVRqSU5IWDIzN1VHcTRjNkFwSXBtMnpHVU5TSXgzcGZNTkhjRmFtVWdSUXAzRzRyRmI3WFdhUXJoakpTMjk0NlNGY014UVY2T2ZWSXVya3JhaWlzZzJ1MWNCUUNPbDRZLXQ1STUyTUJfRHhTajJHUEt5T3hhWndINlhPYjdYWWlKRHJDRWRwSFBnZ01WcUZlOU1JVWlEemc1WWZVWEpSYmItdkcyLWhUT0g4UVNscEN4WWVLcmw4RXVVcXA0cFJfTmJ3VFU2UW1XNDh4N0pVbmthNUxKbkt4WEc3eDBUQVVrLVVnSG1VQjAwYV9CY09UVWhmVXNJTDVlMXpOUGxKVGNvN3lEMzU1U0p6MEpzVkdMekdyTlViNGhEWjVUbEhPRjkxUzRiUXZtQzVUYUoxRnAtREw1bi1YOW9sUzFCZ1FDRXJxV3hfRWUySDlaeGxuUGVtUURxOHBFYnFhTXpSV2J5aWlzTlVfZFotVGxmd3doZTR1d3VxbHl5blJUc1g2dF84ZldCNTd0MnJlWmlCdzVqYVlxa1N1SFhkcmxGMG9CdkJzMWhzSVpRM3l5M1hKaS0tQkZBSmx0em8yaDFyWXo4cFlBMmxlU29yclB3SzcyOHJSWFJDcnozTWdXRWprMVBfQkZubkRSVnREM0V1aE5YUTMzSGYtLXJCVUhLaC1ZSUQ1czMyNXoxaTc1M1ZNVWplX1psY3R2bGpkZ3dXajhWX3lFRjJyM0VmTnBJSFVVVjBUTGw5eVFvUTVsMHNkU0YzbFU1NHZqdDZPcVozMGhmRExuNWlYNVdobDg3dUppaGN4U19USUNWak8tNlZ6bTFBMEFsM0huRU1TWktLY0w5ajFza3FFRWJIbHkyQkNjenZlclFlS1FYVGtraGxiZFF0blJXVHFRdWhKb1ozME5ib0NCbVBnejlEY1VWakRvZ3VrSUZHa1RZMXhzM0J1Y2J2QXNmc1ZoMFg0WnI2WVNTakc4YksxUE5yOTNOblJSZDdyZWtFSllwblpVSlM5Y0o3XzlNZnFyNHBlUHVrS2VoTzBWeU85WUR1YkVxN2NlTmVoRVBEc2hRbTJNUktZeUxCdl9oYXVtOHZuSHVORWI2TmZpRUc3aXpQSWlKdjRQT3dMTGRlaDFsQm5kZWx0Z3dfaVpUeVB0TUM2SmtUMGVwbTR6cUFiakVHRmR2VFRXaTJ0c2gtZkl5ZlktTnZSU3RMTnNfMW5YSGJ1MXVMZzdnbzE0NlNxWUFFNkxyMnp4ZTE2bXBVN3N3YVJEZjlYZ1pQeFBTcndNckwyeHBtSnVPM3BSc0lLSGhDa29aemU2TTU0bnZUenFFV2hrUDlBcnBUaF9BUzhoWlZfREpXOUFmZEg3TFZXMWhxUVNSS2NEX1dMQ2RMcVlfYkdDVzNhQzdKNFViUTg4Zkt0QzIwZDdCWF9ZWDRrX0hkdkxiOTFLRjg0ZUdNdU9PV2RCdEJLcFZnNW1QamxtZnh3X2ZZWnJ1NXRndGtoVGJ1NnBNYmU1UjJIYjhSLUFJdW9tSXBvQzBaR2ZoZDZ0QUE1X04yemVUMkQ5NWhDZ1NZTV9lcjdTTE1fWVk4TlZVMEZKYW9TRlFuYzFDTW5hYjdjSUVsdnpTZGtNczd3RWs0ZmFtUTNTY1BfTy0yNGJISFJEWlFieWpWMDZGNHdHN3M0UWd6RXZ0alJqR0F6cHpfeVdFQ0F5TDd2YWdUT2NfVFgzblpoRnUwdTlXUU9PZG1QaVpwQnh3Y2VKaUQ0QU44Vk1GamVUMzFGaXJkNHhjaUJibjZVQnZ2UUV5ZFV5SGlNUWVvZkZkbDI4OXh1NWJYYzQxTjJfcmpoWmpDSHNqMEMxRzFTdTRLbWFoOFE0ZWFBb2kxTDluaVRXTXlHazMyNURPcktpUnRzUE0zQ2lad0IwM2pablBjZENKd0pHRjA5RHphZlRDbEkwWjRuS0NTSEdTS2RBd1hnMFBzWjBLclNwYjdOaWFqWlNpVDgtWE5iU0ZLZXNpaEF2RzZXMU02aFpYaG9Ia1lHWXFseFR4cUM2OFBqc0x3OUZYN3JOSzZIY2ZQRi1iSG1UWTdaOVBySHA0UFhRUVpKX3NXTXNQekMwMXlsTU9mRDEtc1VWQ2M5S3dOZjBjTHhuSjg5TVJRLTNBLTc3VEVvSmpWa1ZzTE5VNE1peDFaRU8tX3JjSG5UUmE2aXMyeUE0b0lERUZEaG5pMmhTQ253Z1dFTlJINUh5dEF0MW5EMEN4dEYwQ3ZYUElKLVZDdHpnYng1YnpYNVl5THhMX3M0d1ZqRzNyRzVTdzdnZl9wZ0p6d2dyU1Q3WFZSVFE2TmNlel9IUE1jdmhnTXVFUnN2VW85dEFjRjFQMkU5THBaajdlYVRYRjVjTnU1UmxyQnlISFdjNWRBazZoV1dveVUwMVBrTlQ1MFpFNWotODFFX0staDVReVZld3dWNURrQ2t3T1RtbEM3SjdPU3Vkc3VuVC1USEpCLXI0ZDlveTRpWThkazAxRGhtOXo5R0NJNXpSRmxtdWxzUkxpTUppaWVzS19zM0FKWG0tT2tNeVd1UmJucUk1UjhOb0pwcC1Ua210LVJiQ2VQNlRyU3FtNFFJUXYtaU5GU3F6Mjl2b1hla0JWWmppdjQ3S1R3VzFWcVZkUmJNN3JlUURMMFRhUVhfR1RYdkxvek9zUUI3dFNzSHRKQjVkVGxfdW8zMmJ6aS13OHRKTlB2ZGJDNlhFYW1BVFZCTGRIcGt4UElzRDdJb1BaTW5kcEk1WXZhTy1saEVHSlZGOWZCQlhPaDZlY1pGdlZoZ2xyZmY0dVRHM0dCV1dWVUdLUE1MNHZuaE5pWXY1Y1NvWEx0dTN6d0RYVVJ3RWhtR1BkVzY0LWE5cjhLbmwzQ3FVWmppTExHbHZQV1gzX2dMWkFpNnh5M1hYbTVzVl9OdVB1Rjc2bElpZVdQbUZLNW16TlJ4WUtlYnU3X0VmVTNvamF0YTltR0Ntd1gwNVNwN0xCWncyM2FZZUctaFB6dC1hOG1BWWhHcUNvcVpuN1QxN20yaEFxQmwwWGhKX2NmTk1rLVo0S3hXSkkxeWlDUjRabnVrMnVMc0piaE5vZWx2VWJaMU41YUFKNHBmN2ZfZjVESzVWUThLZ3RyNTFCc3hhaWNHWS15YWVTRU95YU9uaHNZLTVaT2plUEhlQ1I4MXFhYjQ5eE1fM0trb1RibjRRX0RqZnVULXVzTVdkUjd3cngzN3A4Tkk5elZHakx0R3M1R0lTdHJ5dDhUcDhSZGxtUDdNYjhndEhRRld3aXJZVTlXRVZIN3pqaks5X1BKUlVKMjREVFpjN1d5cmZEVUxEM1VqYTZ3a3BzUlE4cDE1WWE5cUR6VmNIbzkyT0hJd1dvN1Z3S0tTeEFMSVg4bFV2d2JqVmhJU1BoVFczSXVxQ3hFSEJuTnNnZ3g1Z25PdjZzcTFFUkNsY1FDbmxxc0VuOXo0Vi1YOHJBUTBXMlhGbjBJTHVqRER5OVkzbzNQNndPRHdHaS1KaHRPVENTMUFlVmFOQ2ZqM2tnbDNzeXo1Q2JUOEx6UmxpM2FtY0tNckY0bk04QkxLMTh2ZDlQLTVIQnpwTVlRbmlNTnpacEJBZ3VtUVk0Ny1XU1RNUFhVZXJBVlZOS0ZHeGIxZGVOREtaZUJWMDliRXJzRXZxVjliUVNOanRuVW95bjROcUxxNGdHYzRkRjZPX2FhRVAzeWduU1l1bjM4YnlxNVowWXdjVjYwLVBVR0s0VWNJMGtUakdKcXU2Rl96R3RycVNObGV6Tnk2QzJBaHJUUHhLMlBSODBhc0NfN0k2YmxwOXpEVkFnS0plRkZ5WURuWW9pYzhqeEoxV2hRa0c5WEZHYklXaWFKVHFOT0FCelpycXpEbEpteFNFSlNoYzNQWmdNUm5pSjZKOTJvVlJiOEk4UW0yNGViQmZqOWN6RVJPVjBkbm9uZHdpUWhjRmZPR3FKVDVqakRGaDVFaE9CLVd0RXNiX21mQWZjaDNLWW9uRGhMbUpuY2JnMDRvUFdxcHJfY19EQlNib0dqcWNkNEdxR2tEaTRzVW1fRjJDSHNaOXktZ3hZazNnUnZBTk1lSkd5aEh4TEJmeDNmellUOXVhTUw3UTZLckRkRFRJTjhVN2tjcVJ5aGk1M3pGNHNOODNYQWFIMG1idUtNZHhnMXFSc1JCdDZxd0JzellidWRISHRyNXl2cGNjaVRyM1piREFPQzZUbktOaUJTMFVYbW1kQWViMnl1ZDM4UWkzWmJKYmVTYWMxUjZtLTUzalY0VVE1S2d0VWxUVmJYb2FSTUpYS3lUa1BLcGlQVU5fMkpycXZyNGJmdFU2NU9TWEg1ektWWVdvR3c1bWtyRllZLWljQjB3dUZQdGFGTXhCM0JraFQ0c045TFNERGdyRXVOQ2xaZ0R2SWVmNU5Td3ZZVU1id1BlYVNGd0d0aDQzSXplUy12b0ZfLVZBWDZfTmpxZ3gzYmhvZ2dYenE4VFJtLVo0dVcxSnZ2bU5YVHRwUnk3andRSzc4X25leUdSdVprSGNTcVl0UXpZeEhyVkVkZ2ZDYTNtSWZHOG0zb2dOR2FBanl5VGlwS1gzd0lIRVFvRG9xbk0xNUkxdENPMVBNXzkySkYwUDQ1em9uejdCTmoxT1RwWGRBYXRhbW1xa3l6MGZ1c1UtNHl3ZWtIQndiNlVwUGQ3ZExnY1BmT3p2Yzgwd0pubzB5SHhyUk1EOS1GR2l2SHl3SDFic0doay1UU3k3eEhKdHZ6ckJIU0NMYk9YRUlTTFUzSXRpQWtzeG5Jc29faGhlcUFwME9JaXA0X0YydFVSbFdPekhwaUdBbjExRGtxMTdLUzUzU2VJNXZoNjNRN3llWFN5RW5QMTJqM1lYdGRHc1RSYl9vOTlsLWdSVWt6bk1YRzFCWWVMU0pPNGxVbldIUDZta3RuUkJ5eG5tM1o2cXI3Vk5aUnVEVExoUVRWRFpDNWRPUWZuN21PazV1R3pFNXNrREVxNmNMVzRtMVJBWUhqUkM3SXAwVXNpeVFObVc3RXdtRFlUbHEwZVJNZ0pnYWtmbVIydnY1NDlJLVRPQWhNeHpTLXJiZ1pPYnlURElRbnAtWldxbTc4X3FoeDVCT0ZHNGtja3VmbXRQREtSQXRpRUJtUkZoaUx2VmFzMUVEVEJqbHMxajFSNTVXeWtTSnc1QjBYM194RW0xRjRWRFoycjdMQVJiSkNBTXZMamlmcmpMNjNPR0FNeHhZdUZEdnFhUzBXdjRHWFVZMUM3RmdVRGdTZXRJNmJhdlVxNUV1MnhZbEU5UXp4bWEwV3I2VGJENVVRaUx2WURPNUR1RXlNcHBCcVlRUVBKcnczNndRbmR3SnIwSF9pUnR5bXM2S3lPclRXTkRCQUtUaHU1dHhUNDlBMWhmV3NtMGRXOGRXTXhPczJndDZ5UDdXTlRsMG53U3Y5ZW1xZ0FoQmJNcEJya0NyX1R3ZzZJd0M3VGdGbUJ6dnNmZU9oTmZNVXlvQ2hxWmtLb28wYkRISXpOQmZXNjBYVVNQZGw0OGVlVzJUVjd6LVZwQWlSNlY0SjJiUnFMZWJnYm5WOEl2YjZtRDJZZ25wSlhaZ3ZOZVp0b0ZUR2tjOW5BaUx6UThzWTR3dkVwb1lzNE40ZDRPODVhWG5qU0thbWF3Y2hCTUNtelhYMTFxV2R2ZkJUdmlrQ05mWFpOdFpfTmtISWFoNzk0UUM2cFUzRnpSVlpQcDJzRmFDY3lZbDFkTHhXdkNlNXprbmh3aUkyQXVXSy1fQVFWVUNWYzBZQXJ6dU9yamttc1R1LXJteFM2Ykd5aDRZVC15cDFIOHdMdjFNaTJ0TlRzZmxuaXN1UmtIYzdnZ0FzV1ZFX1dEdF9BZVNGdWR6c2g0RzlUeHF1TWdMQUd1TXRFS3lLRU9RZFhRd1VnTUpyalBub0JpNnV0bGE1anhReUZLZlhPZGdSRmViTTVlSEY0d3VSaW1RSTFKc1A3UExoMTVhLWdNYW1XaDZMU2RzUzFpZ0xpbmdxc1o2SkhGRDh1VkU2WktXdU9rTFpBd1VoNUVfdUYyOHh2VGFpRTJhRkNqUGlLaEliQXFINl96ank4cVRnSU1DT01QR0czdkxtbHVlTV9aX2luQ3Fsc1VRQm1MNVQ1QlQwVGRZV0pvdXA1cUxwWE52dmFLbnlpZ2d1YjV2QVlyeVRkblJnYjFoaFFyN2FqeTBJbUJFcjFBVmRMMGlhSFgtNnNMVjhBMmdkNFJBXzAtU2xrbnVRZUJpakR3M3hXTE9CX0tLRUtueHNsOTA2Z2prVEpQSlEta3hTVk0tU1ZnYlc4ZUNQajc2YlFlSkxmbm13NHpTTnlGMVRHdFB1SFRtWjdrRU1Fa2pXbVJjaHZ1MVJINnMyVGxpMlV0NXVFLWk5al9UMHA2MnFrSDNBcGpWeS1zRGtPMFdIRlVaTVR6dUtubkFSN25zVlB4S2hZcWpkb19ObU93RHN2WjcwRmF3eXZlNVdoSE9wcXY1N3BZUUt5cDlnVmNHMkNrNldzcXZWZGF0RzBudnc5d25SeTFiTElfYm0wS0FGU3JyVEY1TEwzN1VnSFplaWpXd2FlZlR0a1FEYWdoV1Y4TF9EUFVHb1RJcWc4UHBrNHdEcjJ5MGdDRE5zajl4aWNRcVZDTkJ3ZGM5VlV4RHJnUWZIZHUyX19ZZz09)
        CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmZrVXdweXFEU2pMM0o4UG02Wmk5ZDhid2hlUHN1UTI5blRveG9vUjc5RXR5NlVLUWR6ajFPTnFERm1aRmJnVnpUcUlydXZ6RVk5bjhhVHhZMVFoY001UFlsWmc9PQ==)
        CM_PROVISIONING_PROFILE: Encrypted()
        XCODE_WORKSPACE: yamlmanualdevelopment.xcworkspace
        XCODE_SCHEME: yamlmanualdevelopment
      xcode: latest
      cocoapods: default
    scripts:
      - keychain initialize
      - name: Set up provisioning profiles
        script: |
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
          echo "Saved provisioning profile $PROFILE_PATH"
      - name: Set up signing certificate
        script: |
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
      - xcode-project use-profiles
      - xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
